import math
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


def f(xyz):
    return [0, 101*xyz[1]+250*xyz[2] , 40*xyz[1]+101*xyz[2]]


#Butcher matrix
BT = [[0, 0, 0, 0], [0.5, 0.5, 0, 0], [1, 0, 1, 0], [0, 1/6, 2/3, 1/6]]


xyz = []    #xyz = {x_i, y_i, z_i}, i = 0 ... N
h = 1/640


xyz.append([0, 5, 2, 0, 0, 0, 0, 0, 0])
for i in range(640):
    k1 = f([xyz[i][0], xyz[i][1],xyz[i][2]])
    k2 = f([xyz[i][0] + BT[1][0]*h, xyz[i][1] + BT[1][1]*h*k1[1],xyz[i][2] + BT[1][1]*h*k1[2]])
    k3 = f([xyz[i][0] + BT[2][0]*h, xyz[i][1] + BT[2][1]*h*k1[1] + BT[2][2]*h*k2[1],xyz[i][2] + BT[2][1]*h*k1[2] + BT[2][2]*h*k2[2]])

    xyz.append([0, 0, 0 , 0, 0, 0, 0, 0, 0])
    xyz[i + 1][0] = (i + 1)/640
    xyz[i + 1][1] = xyz[i][1] + h*(BT[3][1]*k1[1] + BT[3][2]*k2[1] + BT[3][3]*k3[1])
    xyz[i + 1][2] = xyz[i][2] + h*(BT[3][1]*k1[2] + BT[3][2]*k2[2] + BT[3][3]*k3[2])
    xyz[i + 1][3] = -5*math.exp(xyz[i + 1][0])+5*math.exp(201*xyz[i + 1][0])
    xyz[i + 1][4] = 2*math.exp(xyz[i + 1][0])+2*math.exp(201*xyz[i + 1][0])
    xyz[i + 1][5] = math.fabs(xyz[i + 1][3]-xyz[i + 1][1])
    xyz[i + 1][6] = math.fabs(xyz[i + 1][4]-xyz[i + 1][2])
    xyz[i + 1][7] = xyz[i + 1][5]/xyz[i + 1][3]
    xyz[i + 1][8] = xyz[i + 1][6]/xyz[i + 1][4]



x = []
y = []
z = []
t = []
r = []
dy = []
dz = []
ry = []
rz = []

for i in range(640):
    x.append(xyz[i][0])
    y.append(xyz[i][1])
    z.append(xyz[i][2])
    t.append(xyz[i][3])
    r.append(xyz[i][4])
    dy.append(xyz[i][5])
    dy.append(xyz[i][6])
    ry.append(xyz[i][7])
    rz.append(xyz[i][8])
    


fig = plt.figure()
ax = fig.gca(projection='3d')
ax.plot(x, y, z, 'b',t, r, 'y')
ax.set_xlabel('x')
ax.set_ylabel('y1')
ax.set_zlabel('y2')
ax.axis()
ax.grid()
plt.show()

#sol = [0, 0, 0, 0, 0, 0, 0]
# j=1
# for i in range (640):
 # if (i%64==0): sol.append(xyz[j][0])
 # if (i%64==0): sol.append(xyz[j][1])
 # if (i%64==0): sol.append(xyz[j][2])
 # if (i%64==0): sol.append(xyz[j][3])
 # if (i%64==0): sol.append(xyz[j][4])
 # if (i%64==0): sol.append(xyz[j][5])
 # if (i%64==0): sol.append(xyz[j][6])

	
file = open('output.log', 'w')
np.savetxt('output.log', xyz )
